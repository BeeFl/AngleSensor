C51 COMPILER V9.60.0.0   PWMN                                                              05/31/2021 15:55:14 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PWMN
OBJECT MODULE PLACED IN .\Objects\PWMn.obj
COMPILER INVOKED BY: F:\keil\C51\BIN\C51.EXE PWMn.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\PWMn.ls
                    -t) TABS(2) OBJECT(.\Objects\PWMn.obj)

line level    source

   1          /*************  ±¾³ÌÐò¹¦ÄÜËµÃ÷  **************
   2          
   3          ÓÃPCAÊµÏÖnÎ»PWM
   4          
   5          **********************************************/
   6          #include  "PWMn.h"
   7          
   8          
   9          //========================================================================
  10          // ÎÄ¼þ: PWMn.c
  11          // ¹¦ÄÜ: Ê¹ÓÃSTCÄÚ´øµÄPCA×ö9~16Î»µÄPWM¡£ÔÚPWMn.hÖÐÑ¡ÔñÊÇSTC12C5201ADÏµÁÐ»¹ÊÇSTC12C5A60S2ÏµÁÐ¡£
  12          // °æ±¾: VER1.0
  13          // ÈÕÆÚ: 2009-12-30
  14          // ±¸×¢: 
  15          //========================================================================
  16          
  17          /*
  18                           Ô­ÀíËµÃ÷£º
  19          ±¾Ê¾Àý³ÌÐò½éÉÜÔÚÒ»Ð©Ó¦ÓÃÖÐËùÐèÒªµÄ¸ßÓÚ8Î»·Ö±æÂÊµÄ9~16Î»PWM£¬¶ø8Î»µÄPWM¿ÉÒÔÖ±½ÓÊ¹ÓÃSTCµÄÓ²¼þPWM£¬Çë²Î¿¼ÓÐ¹Ø
             -µÄµÄ(Datasheet)¡£
  20          ±¾Ó¦ÓÃËùÐèÒª×ÊÔ´£ºPCA¿É±à³Ì¼ÆÊýÆ÷ÕóÁÐ£¬²¶»ñ¼Ä´æÆ÷£¬Æ¥ÅäÖÐ¶ÏÏòÁ¿¡£
  21          ³ÌÐòÓÃµ½Á½¸ö16Î»±äÁ¿:
  22          PWM_high  ±£´æPWMÊä³ö¸ßµçÆ½µÄPCAÊ±ÖÓÊý¡£
  23          PWM_low   ±£´æPWMÊä³öµÍµçÆ½µÄPCAÊ±ÖÓÊý¡£
  24          PWMµÄÖÜÆÚ = PWM_HIGH + PWM_LOW¡£
  25          PCAÊ±ÖÓÔ´ÓÐ8ÖÖÑ¡Ôñ¡£
  26          PCAÄ£¿é±»ÅäÖÃÎª16Î»¸ßËÙÊä³ö·½Ê½£¬µ±PCA¼ÆÊýÖµÓë²¶»ñ¼Ä´æÆ÷ÊýÖµÆ¥ÅäÊ±£¬½«CCP0Êä³öÈ¡·´£¬Í¬Ê±·¢Éú±È½ÏÆ¥ÅäÖÐ¶Ï¡£
  27          ±È½ÏÆ¥ÅäÖÐ¶ÏÀïÅÐ¶Ï¸ßËÙÊä³öµÄµçÆ½£¬Èç¹ûÊÇ¸ßµçÆ½£¬ÔòÏò²¶»ñ¼Ä´æÆ÷×°Èë¸ßµçÆ½µÄPCAÊ±ÖÓÊý¡£Èç¹ûÊÇµÍµçÆ½£¬Ôò×°Èëµ
             -ÍµçÆ½µÄPCAÊ±ÖÓÊý¡£
  28          ÓÉÓÚÖÐ¶Ï´¦ÀíÐèÒªÒ»µãÊ±¼ä£¬ËùÒÔÊä³öµÄÕ¼¿Õ±È²»ÄÜµ½0%»ò100%£¬ËùÒÔ¶ÔPWM_highÓÐ×îÐ¡ºÍ×î´óÖµ£¬ÖÐ¶Ï´¦Àí¾ø¶ÔÊ±¼ä´ó
             -Ô¼Îª100¸öSYSCLK¡£
  29          
  30          ±¾Ê¾Àý³ÌÐòµÄ²âÊÔÊÇ»ùÓÚÈçÏÂ¼ÙÉè£º
  31          PCAÊ±»ùÐÅºÅÎªÏµÍ³Ê±ÖÓFosc£¬PCAÖÐ¶ÏÓÅÏÈ¼¶Îª×î¸ß¡£
  32          ÌáÊ¾£ºÆäËüÖÐ¶Ï·þÎñ¿ªÏúºÜ³¤Ê±¼äÊ±£¬ÓÐ¿ÉÄÜ»áÓ°Ïì±¾³ÌÐòµÄÕý³£ÔËÐÐ¡£
  33          
  34          ±¾Ê¾Àý³ÌÐòÓÃ»§¿ÉÒÔÔÚ"ÓÃ»§ÅäÖÃºê"ÖÐÑ¡ÔñÒÔÏÂ²ÎÊý£º
  35          PCA_IDLE_DISABLE  ÔÚIDLEÄ£Ê½ÊÇ·ñ½ûÖ¹PCA¹¤×÷£¬Ñ¡Ôñ1: MCUÔÚIDLEÄ£Ê½Ê±½ûÖ¹PCA¹¤×÷£¬  Ñ¡Ôñ0:  MCUÔÚIDLEÄ£Ê½Ê±ÔÊÐ
             -íPCA¹¤×÷¡£
  36          PCA_SOURCE_SELECT Ñ¡ÔñPCAµÄ»ù×¼Ê±ÖÓÔ´£¬±¾Ê¾ÀýÊ¹ÓÃÏµÍ³Ê±ÖÓFosc×öPCAÊ±ÖÓÔ´¡£
  37          PWM_DUTY      ¶¨ÒåPWMµÄÖÜÆÚ£¬ÊýÖµÎªPCAËùÑ¡ÔñµÄÊ±ÖÓÂö³å¸öÊý£¬ÓÃ»§Ö»ÐèÒª×°ÔØPWM_high£¬PWM_lowÊÇ¸ù¾ÝÕâ¸öÖÜÆÚ¼ÆËã
             -³öÀ´µÄ¡£
  38          PWM_HIGH_MAX    ÏÞÖÆPWMÊä³öµÄ×î´óÕ¼¿Õ±È£¬Ô­ÒòÈçÇ°ËùÊö¡£Èç¹û×°ÔØPWM_high´óÓÚ´ËÊýÖµ£¬½«·µ»Ø´íÎó¡£
  39          PWM_HIGH_MIN    ÏÞÖÆPWMÊä³öµÄ×îÐ¡Õ¼¿Õ±È£¬Ô­ÒòÈçÇ°ËùÊö¡£Èç¹û×°ÔØPWM_highÐ¡ÓÚ´ËÊýÖµ£¬½«·µ»Ø´íÎó¡£
  40          */
  41          
  42          unsigned int  PWM_high;         //¶¨ÒåPWMÕ¼¿Õ±È¼Ä´æÆ÷£¬¼´PWMÊä³ö¸ßµçÆ½µÄPCAÊ±ÖÓÂö³å¸öÊý£¨Õ¼¿Õ±ÈÐ´Èë±äÁ¿£©¡£
  43          unsigned int  PWM_low;          //¶¨ÒåPWMÊä³öµÍµçÆ½µÄPCAÊ±ÖÓÂö³å¸öÊý¡£
  44          unsigned int  CCAP0_tmp;          //¶¨ÒåCCAP0ÖØ×°ÔØÓ°Éä¼Ä´æÆ÷¡£
  45          
  46          //========================================================================
  47          // º¯Êý: void PWMn_SetHighReg(unsigned int high)
  48          // ÃèÊö: Ð´ÈëÕ¼¿Õ±ÈÊý¾Ý¡£
  49          // ²ÎÊý: high:  Õ¼¿Õ±ÈÊý¾Ý£¬¼´PWMÊä³ö¸ßµçÆ½µÄPCAÊ±ÖÓÂö³å¸öÊý¡£
C51 COMPILER V9.60.0.0   PWMN                                                              05/31/2021 15:55:14 PAGE 2   

  50          // ·µ»Ø: ÎÞ
  51          // °æ±¾: VER1.0
  52          // ÈÕÆÚ: 2009-12-30
  53          // ±¸×¢: 
  54          //========================================================================
  55          void PWMn_SetHighReg(unsigned int high)
  56          {
  57   1        if(high > PWM_HIGH_MAX)   high = PWM_HIGH_MAX;  //Èç¹ûÐ´Èë´óÓÚ×î´óÕ¼¿Õ±ÈÊý¾Ý£¬Ç¿ÖÆÎª×î´óÕ¼¿Õ±È¡£
  58   1        if(high < PWM_HIGH_MIN)   high = PWM_HIGH_MIN;  //Èç¹ûÐ´ÈëÐ¡ÓÚ×îÐ¡Õ¼¿Õ±ÈÊý¾Ý£¬Ôò·µ»Ø´íÎó´úÂë2¡£
  59   1        CR = 0;           //Í£Ö¹PCA¡£
  60   1        PWM_high = high;            //Êý¾ÝÔÚÕýÈ··¶Î§£¬Ôò×°ÈëÕ¼¿Õ±È¼Ä´æÆ÷¡£
  61   1        PWM_low = PWM_DUTY - high;        //¼ÆËã²¢±£´æPWMÊä³öµÍµçÆ½µÄPCAÊ±ÖÓÂö³å¸öÊý¡£
  62   1        CR = 1;           //Æô¶¯PCA¡£
  63   1      }
  64          
  65          //========================================================================
  66          // º¯Êý: void PWMn_init(unsigned int high)
  67          // ÃèÊö: ³õÊ¼»¯³ÌÐò¡£
  68          // ²ÎÊý: high:  ³õÊ¼»¯Õ¼¿Õ±ÈÊý¾Ý£¬¼´PWMÊä³ö¸ßµçÆ½µÄPCAÊ±ÖÓÂö³å¸öÊý¡£
  69          // ·µ»Ø: ÎÞ
  70          // °æ±¾: VER1.0
  71          // ÈÕÆÚ: 2009-12-30
  72          // ±¸×¢: 
  73          //========================================================================
  74          void PWMn_init(unsigned int high)
  75          {
  76   1        P1M1 &= ~0x08,  P1M0 |=  0x08;    //CCAP0Ê¹ÓÃPUSH-PULLÊä³öÄ£Ê½£¬STC12C5A60S2ÏµÁÐ, P1.3¡£this
  77   1        CCON = 0;         //Çå³ýCF¡¢CR¡¢CCF0¡¢CCF1
  78   1        IPH |= 0x80;        //PCAÖÐ¶ÏÊ¹ÓÃ×î¸ßÓÅÏÈ¼¶
  79   1        PPCA = 1;
  80   1        CMOD = (PCA_IDLE_DISABLE << 7) | (PCA_SOURCE_SELECT << 1);  //³õÊ¼»¯PCAÄ£Ê½¼Ä´æÆ÷£¬ÕâÁ½ÏîÔÚPWMn.hÖÐÑ¡Ôñ¡£
  81   1        CCAPM0 = 0x4D;        //¸ßËÙÊä³öÄ£Ê½£¬ÔÊÐí±È½ÏÆ¥ÅäÖÐ¶Ï(ECCF0=1)¡£
  82   1        CL = 0;           //Çå¿ÕPCA»ù±¾¼ÆÊýÆ÷¡£
  83   1        CH = 0;
  84   1        CCAP0_tmp = 0;        //Çå¿ÕCCAP0ÖØ×°ÔØÓ°Éä¼Ä´æÆ÷¡£
  85   1        PWMn_SetHighReg(high);    //³õÊ¼»¯Õ¼¿Õ±ÈÊý¾Ý¡£
  86   1        CR = 1;           //Æô¶¯PCA¡£
  87   1        EA = 1;           //ÔÊÐí×ÜÖÐ¶Ï
  88   1      }
  89          
  90          //========================================================================
  91          // º¯Êý: void PCA_interrupt (void) interrupt 7
  92          // ÃèÊö: PCAÖÐ¶Ï·þÎñ³ÌÐò¡£
  93          // ²ÎÊý: ÎÞ¡£
  94          // ·µ»Ø: ÎÞ¡£
  95          // °æ±¾: VER1.0
  96          // ÈÕÆÚ: 2009-12-30
  97          // ±¸×¢: 
  98          //========================================================================
  99          void PCA_interrupt (void) interrupt 7
 100          {
 101   1        if(CCF0 == 1)   //PCAÄ£¿é0ÖÐ¶Ï
 102   1        {
 103   2          CCF0 = 0;   //ÇåPCAÄ£¿é0ÖÐ¶Ï±êÖ¾
 104   2      
 105   2          if(CCP0 == 1) CCAP0_tmp += PWM_high;    //Êä³öÎª¸ßµçÆ½£¬Ôò¸øÓ°Éä¼Ä´æÆ÷×°ÔØ¸ßµçÆ½Ê±¼ä³¤¶È
 106   2          else      CCAP0_tmp += PWM_low;   //Êä³öÎªµÍµçÆ½£¬Ôò¸øÓ°Éä¼Ä´æÆ÷×°ÔØµÍµçÆ½Ê±¼ä³¤¶È
 107   2          CCAP0L = (unsigned char)CCAP0_tmp;      //½«Ó°Éä¼Ä´æÆ÷Ð´Èë²¶»ñ¼Ä´æÆ÷£¬ÏÈÐ´CCAP0L
 108   2          CCAP0H = (unsigned char)(CCAP0_tmp >> 8); //ºóÐ´CCAP0H
 109   2        }
 110   1      /*
 111   1        else if(CCF1 == 1)  //PCAÄ£¿é1ÖÐ¶Ï
C51 COMPILER V9.60.0.0   PWMN                                                              05/31/2021 15:55:14 PAGE 3   

 112   1        {
 113   1          CCF1 = 0;   //ÇåPCAÄ£¿é1ÖÐ¶Ï±êÖ¾
 114   1        }
 115   1        else if(CF == 1)  //PCAÒç³öÖÐ¶Ï
 116   1        {
 117   1          CF = 0;     //ÇåPCAÒç³öÖÐ¶Ï±êÖ¾
 118   1        }
 119   1      */
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    124    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
